spring:
  application:
    name: core-processor
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/modula}
    username: ${SPRING_DATASOURCE_USERNAME:admin}
    password: ${SPRING_DATASOURCE_PASSWORD:admin}
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true


  kafka:
    bootstrap-servers: ${KAFKA-BROKERS:localhost:9092}
    listener:
      ack-mode: record
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        enable.idempotence: true
        acks: all
        retries: 2147483647
        transactional.id: producer-id-core-processor
    consumer:
      autoOffsetReset: earliest
      keyDeserializer: org.apache.kafka.common.serialization.StringDeserializer
      valueDeserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: false
      isolation-level: read_committed

      properties:
        spring.json.trusted.packages: "com.modula.common.domain.workflow.execution.events"

server:
  port: ${SERVER_PORT:8080}

kafka:
  topics:
    workflow-executor-topic: exec-topic


feign:
  clients:
    core-builder:
      url: ${CORE_BUILDER_CLIENT_URL:http://localhost:8090/}
